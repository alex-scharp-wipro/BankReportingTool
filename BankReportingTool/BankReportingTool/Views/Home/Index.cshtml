@using BankReportingTool.Models;

@{
    ViewBag.Title = "Home Page";
}

<div class="row mt-5">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">Saved Searches</div>
            <div class="card-body">
                <ul class="list-group">
                    <li class="list-group-item">search 1</li>
                    <li class="list-group-item">search 2</li>
                    <li class="list-group-item">search 3</li>
                    <li class="list-group-item">etc.</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div class="card my-3">
            <div class="card-header">Reports DropDown</div>
            @Html.DropDownList("ReportSelection",
                    new SelectList(Enum.GetValues(typeof(Reports))),
                    "Select Report",
                    new { @class = "form-control", @onchange = "func()" })

        </div>
        @*  For file upload buttons, jQuery updates file name when selected
            Set up routing for POST *@
        @using (Html.BeginForm("UploadFile", "Upload", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <label class="btn btn-primary">
                <input id="file" name="file" type="file" style="display:none" onchange="$('#upload-file-info').html(this.files[0].name)" />
                Choose File
            </label>
            <span id="upload-file-info"></span>
            <br />
            <input class="btn btn-primary" type="submit" value="Upload" />
            @ViewBag.Message
        }
    </div>
    <div id="display_filters" class="col-md-6">
        @Html.Partial("_Filters")
    </div>
</div>

@* Script function for generating current Filters based on user input. 
    This function is called when the DropDownList for 
    ReportSelection is changed by the user.

    TODO: Make the function dynamic. Currently only 
    generates the view from Views/Filters/_ConsumerSpendingFiltersView.cshtml 
    via the home controller action method GetFilters(0)*@
@section Scripts
{
    <script>
        function func() {
                $(document).ready(function () {
                    $.ajax({
                        url: '/Home/GetFilters',
                        type: 'POST',
                        async: false,
                        data: { reportId: 0 },
                        success: function (result) {
                            $("#display_filters").html(result);
                        }
                    });
                });
        }
    </script>
}